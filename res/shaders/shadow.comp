#version 450
#extension GL_GOOGLE_include_directive : require
#include "defines.glsl"
#include "trace.glsl"
#include "utils.glsl"

layout(local_size_x = THREADS, local_size_y = 1, local_size_z = 1) in;

layout(binding=4, std140) buffer ShadowRays {
	RayPayload shadowRays[];
};

layout(binding=8, std140) readonly buffer PositionBuffer {
	vec3 positions[];
};

layout(binding=5, std140) readonly buffer Counters {
	uint shadowCounter;
	uint reflrectionCounter;
};

//Handling intersection

void main() {

	uint shadowId = gl_GlobalInvocationID.x;

	if(shadowId >= shadowCounter)
		return;

	const RayPayload payload = shadowRays[shadowId];

	//Shoot ray
	
	const Ray ray = Ray(
		positions[payload.loc1D], 0,
		payload.dir, 0
	);

	shadowRays[shadowId].loc1D = uint(traceOcclusion(ray, payload.maxDist));
}