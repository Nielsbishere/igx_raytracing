#version 450
#extension GL_GOOGLE_include_directive : require
#include "defines.glsl"
#include "trace.glsl"

//Since we only need to know an approximate offset, we can store into rgba8

layout(binding=4, rgba8) writeonly uniform image3D pointArr;

layout(binding=1, std140) uniform WorleyData {

	uvec3 targetRes;
	float offsetX;

	uvec3 pointsRes;
	float offsetY;

	float offsetZ;
	float worleyLayer;

};

layout(local_size_x = THREADS_X, local_size_y = THREADS_Y, local_size_z = 1) in;

void main() {

	//Generate primaries
	
	const uvec3 loc = gl_GlobalInvocationID;

	if(any(greaterThanEqual(loc, pointsRes)))
		return;

	imageStore(pointArr, ivec3(loc), vec4(rand(vec3(offsetX, offsetY, offsetZ) + vec3(loc)), 0));
}